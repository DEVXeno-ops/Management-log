const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder } = require('discord.js');

// Centralized emoji configuration
const EMOJIS = {
  LOGS: 'üìú',
  ERROR: '‚ùå',
  CHANNEL: 'üìå',
  ID: 'üÜî',
  SUCCESS: '‚úÖ',
};

module.exports = {
  data: new SlashCommandBuilder()
    .setName('logs')
    .setDescription(`${EMOJIS.LOGS} ‡∏î‡∏π‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (mod-logs)`)
    .setDefaultMemberPermissions(PermissionFlagsBits.ViewAuditLog)
    .setDMPermission(false), // Prevent command from being used in DMs

  async execute(interaction) {
    try {
      // Defer reply to handle potential processing time
      await interaction.deferReply({ ephemeral: true });

      // Find the mod-logs channel
      const logChannel = interaction.guild.channels.cache.find(
        c => c.name.toLowerCase() === 'mod-logs' && c.isTextBased()
      );

      // Check if channel exists
      if (!logChannel) {
        const errorEmbed = new EmbedBuilder()
          .setColor('#FF0000')
          .setTitle(`${EMOJIS.ERROR} ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á Mod-Logs`)
          .setDescription('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠ `mod-logs` ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ')
          .setTimestamp()
          .setFooter({
            text: interaction.guild.name,
            iconURL: interaction.guild.iconURL({ dynamic: true }) || undefined,
          });

        return await interaction.editReply({ embeds: [errorEmbed] });
      }

      // Create success embed
      const successEmbed = new EmbedBuilder()
        .setColor('#00FF00')
        .setTitle(`${EMOJIS.LOGS} ‡∏ä‡πà‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå`)
        .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: ${logChannel}`)
        .addFields(
          { name: `${EMOJIS.CHANNEL} ‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á`, value: logChannel.name, inline: true },
          { name: `${EMOJIS.ID} Channel ID`, value: logChannel.id, inline: true }
        )
        .setTimestamp()
        .setFooter({
          text: `‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢ ${interaction.user.username}`,
          iconURL: interaction.user.displayAvatarURL({ dynamic: true }),
        });

      // Send success response
      await interaction.editReply({ embeds: [successEmbed] });

    } catch (error) {
      // Handle unexpected errors
      const errorEmbed = new EmbedBuilder()
        .setColor('#FF0000')
        .setTitle(`${EMOJIS.ERROR} ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î`)
        .setDescription('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á')
        .addFields({ name: '‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', value: `\`\`\`${error.message}\`\`\`` })
        .setTimestamp()
        .setFooter({
          text: interaction.guild.name,
          iconURL: interaction.guild.iconURL({ dynamic: true }) || undefined,
        });

      await interaction.editReply({ embeds: [errorEmbed] });
      console.error('Logs Command Error:', error);
    }
  },
};
